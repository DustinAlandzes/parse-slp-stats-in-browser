{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["Title","Typography","Paragraph","Text","Link","Header","Layout","Content","Sider","App","className","theme","mode","defaultSelectedKeys","Item","width","defaultOpenKeys","style","height","borderRight","icon","LaptopOutlined","UserOutlined","padding","margin","minHeight","backgroundColor","strong","level","code","href","onChange","console","log","action","directory","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAUOA,EAAgCC,IAAhCD,MAAOE,EAAyBD,IAAzBC,UAAWC,EAAcF,IAAdE,KAAMC,EAAQH,IAARG,KACxBC,EAA0BC,IAA1BD,OAAQE,EAAkBD,IAAlBC,QAASC,EAASF,IAATE,MAkGTC,MA/Ff,WACI,OACI,eAAC,IAAD,WACI,cAACJ,EAAD,CAAQK,UAAU,SAAlB,SACI,cAAC,IAAD,CAAMC,MAAM,OAAOC,KAAK,aAAaC,oBAAqB,CAAC,KAA3D,SACI,cAAC,IAAKC,KAAN,kBAAe,SAGvB,eAAC,IAAD,WACI,cAACN,EAAD,CAAOO,MAAO,IAAKL,UAAU,yBAA7B,SACI,eAAC,IAAD,CACIE,KAAK,SACLC,oBAAqB,CAAC,KACtBG,gBAAiB,CAAC,QAClBC,MAAO,CAACC,OAAQ,OAAQC,YAAa,GAJzC,UAMI,cAAC,IAAKL,KAAN,CAAmBM,KAAM,cAACC,EAAA,EAAD,IAAzB,gCAAe,KACf,cAAC,IAAKP,KAAN,CAAmBM,KAAM,cAACE,EAAA,EAAD,IAAzB,mBAAe,UAGvB,eAAC,IAAD,CAAQL,MAAO,CAACM,QAAS,eAAzB,UACI,eAAC,IAAD,CAAYN,MAAO,CAACO,OAAQ,UAA5B,UACI,cAAC,IAAWV,KAAZ,mBACA,cAAC,IAAWA,KAAZ,qCAEJ,eAACP,EAAD,CACIG,UAAU,yBACVO,MAAO,CACHM,QAAS,GACTC,OAAQ,EACRC,UAAW,IACXC,gBAAiB,SANzB,UASI,eAAC,IAAD,WACI,cAAC1B,EAAD,kCACA,cAACE,EAAD,gQAOA,eAACA,EAAD,gKAII,cAACC,EAAD,CAAMwB,QAAM,EAAZ,mNAJJ,OAYA,cAAC3B,EAAD,CAAO4B,MAAO,EAAd,sCACA,eAAC1B,EAAD,6GAGK,cAACC,EAAD,CAAM0B,MAAI,EAAV,oBAHL,QAGkC,cAAC1B,EAAD,CAAM0B,MAAI,EAAV,mBAHlC,oFAQA,cAAC3B,EAAD,UACI,+BACI,6BACI,cAACE,EAAD,CAAM0B,KAAK,IAAX,0BAEJ,6BACI,cAAC1B,EAAD,CAAM0B,KAAK,IAAX,wBAEJ,6BACI,cAAC1B,EAAD,CAAM0B,KAAK,IAAX,yCAKhB,cAAC,IAAD,CACIC,SAAUC,QAAQC,IAClBC,OAAQ,2BAGRC,WAAS,EALb,SAMI,cAAC,IAAD,CAAQC,KAAK,UAAb,uFCpFbC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.057d3e6b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\n// slippi-js and node buffer polyfill so I can pass slippi files to it\n\n// antd\nimport 'antd/dist/antd.css'\nimport {Breadcrumb, Button, Layout, Menu, Typography, Upload} from 'antd';\nimport {LaptopOutlined, UserOutlined} from '@ant-design/icons';\n\nconst {Title, Paragraph, Text, Link} = Typography;\nconst {Header, Content, Sider} = Layout;\n\n\nfunction App() {\n    return (\n        <Layout>\n            <Header className=\"header\">\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n                    <Menu.Item key=\"1\">Home</Menu.Item>\n                </Menu>\n            </Header>\n            <Layout>\n                <Sider width={200} className=\"site-layout-background\">\n                    <Menu\n                        mode=\"inline\"\n                        defaultSelectedKeys={['1']}\n                        defaultOpenKeys={['sub1']}\n                        style={{height: '100%', borderRight: 0}}\n                    >\n                        <Menu.Item key=\"1\" icon={<LaptopOutlined/>}>Parse Slippi Folder</Menu.Item>\n                        <Menu.Item key=\"2\" icon={<UserOutlined/>}>Logout</Menu.Item>\n                    </Menu>\n                </Sider>\n                <Layout style={{padding: '0 24px 24px'}}>\n                    <Breadcrumb style={{margin: '16px 0'}}>\n                        <Breadcrumb.Item>Home</Breadcrumb.Item>\n                        <Breadcrumb.Item>Parse Slippi Folder</Breadcrumb.Item>\n                    </Breadcrumb>\n                    <Content\n                        className=\"site-layout-background\"\n                        style={{\n                            padding: 24,\n                            margin: 0,\n                            minHeight: 280,\n                            backgroundColor: \"white\"\n                        }}\n                    >\n                        <Typography>\n                            <Title>Parse Slippi Folder</Title>\n                            <Paragraph>\n                                In the process of internal desktop applications development, many different design specs\n                                and\n                                implementations would be involved, which might cause designers and developers\n                                difficulties and\n                                duplication and reduce the efficiency of development.\n                            </Paragraph>\n                            <Paragraph>\n                                After massive project practice and summaries, Ant Design, a design language for\n                                background\n                                applications, is refined by Ant UED Team, which aims to\n                                <Text strong>\n                                    uniform the user interface specs for internal background projects, lower the\n                                    unnecessary\n                                    cost of design differences and implementation and liberate the resources of design\n                                    and\n                                    front-end development\n                                </Text>.\n                            </Paragraph>\n                            <Title level={2}>Guidelines and Resources</Title>\n                            <Paragraph>\n                                We supply a series of design principles, practical patterns and high quality design\n                                resources\n                                (<Text code>Sketch</Text> and <Text code>Axure</Text>), to help people create their\n                                product\n                                prototypes beautifully and efficiently.\n                            </Paragraph>\n\n                            <Paragraph>\n                                <ul>\n                                    <li>\n                                        <Link href=\"#\">Principles</Link>\n                                    </li>\n                                    <li>\n                                        <Link href=\"#\">Patterns</Link>\n                                    </li>\n                                    <li>\n                                        <Link href=\"#\">Resource Download</Link>\n                                    </li>\n                                </ul>\n                            </Paragraph>\n                        </Typography>\n                        <Upload\n                            onChange={console.log}\n                            action={'https://httpbin.org/post'}\n                            //previewFile={(file) => {}}\n\n                            directory>\n                            <Button type=\"primary\">\n                                Click me to open the prompt, and choose your Slippi folder\n                            </Button>\n                        </Upload>\n                    </Content>\n                </Layout>\n            </Layout>\n        </Layout>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}